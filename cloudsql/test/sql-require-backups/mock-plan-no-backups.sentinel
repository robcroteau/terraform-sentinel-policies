import "strings"
import "types"

_modules = {
	"root": {
		"data": {},
		"path": [],
		"resources": {
			"google_sql_database_instance": {
				"postgres": {
					0: {
						"applied": {
							"connection_name":               "74D93920-ED26-11E3-AC10-0800200C9A66",
							"database_version":              "POSTGRES_11",
							"first_ip_address":              "74D93920-ED26-11E3-AC10-0800200C9A66",
							"id":                            "74D93920-ED26-11E3-AC10-0800200C9A66",
							"ip_address":                    "74D93920-ED26-11E3-AC10-0800200C9A66",
							"master_instance_name":          "74D93920-ED26-11E3-AC10-0800200C9A66",
							"name":                          "postgres-instance-946848957",
							"private_ip_address":            "74D93920-ED26-11E3-AC10-0800200C9A66",
							"project":                       "74D93920-ED26-11E3-AC10-0800200C9A66",
							"public_ip_address":             "74D93920-ED26-11E3-AC10-0800200C9A66",
							"region":                        "74D93920-ED26-11E3-AC10-0800200C9A66",
							"replica_configuration":         "74D93920-ED26-11E3-AC10-0800200C9A66",
							"self_link":                     "74D93920-ED26-11E3-AC10-0800200C9A66",
							"server_ca_cert":                "74D93920-ED26-11E3-AC10-0800200C9A66",
							"service_account_email_address": "74D93920-ED26-11E3-AC10-0800200C9A66",
							"settings": [
								{
									"activation_policy":      "74D93920-ED26-11E3-AC10-0800200C9A66",
									"availability_type":      "74D93920-ED26-11E3-AC10-0800200C9A66",
									"backup_configuration":   "74D93920-ED26-11E3-AC10-0800200C9A66",
									"crash_safe_replication": "74D93920-ED26-11E3-AC10-0800200C9A66",
									"disk_autoresize":        true,
									"disk_size":              "74D93920-ED26-11E3-AC10-0800200C9A66",
									"disk_type":              "74D93920-ED26-11E3-AC10-0800200C9A66",
									"ip_configuration":       "74D93920-ED26-11E3-AC10-0800200C9A66",
									"location_preference":    "74D93920-ED26-11E3-AC10-0800200C9A66",
									"pricing_plan":           "PER_USE",
									"replication_type":       "SYNCHRONOUS",
									"tier":                   "db-f1-micro",
									"version":                "74D93920-ED26-11E3-AC10-0800200C9A66",
								},
							],
						},
						"destroy": false,
						"diff": {
							"connection_name": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"database_version": {
								"computed": false,
								"new":      "POSTGRES_11",
								"old":      "",
							},
							"first_ip_address": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"id": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"ip_address.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"master_instance_name": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"name": {
								"computed": false,
								"new":      "postgres-instance-946848957",
								"old":      "",
							},
							"private_ip_address": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"project": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"public_ip_address": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"region": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"replica_configuration.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"self_link": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"server_ca_cert.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"service_account_email_address": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"settings.#": {
								"computed": false,
								"new":      "1",
								"old":      "",
							},
							"settings.0.activation_policy": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"settings.0.availability_type": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"settings.0.backup_configuration.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"settings.0.crash_safe_replication": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"settings.0.disk_autoresize": {
								"computed": false,
								"new":      "true",
								"old":      "",
							},
							"settings.0.disk_size": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"settings.0.disk_type": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"settings.0.ip_configuration.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"settings.0.location_preference.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"settings.0.pricing_plan": {
								"computed": false,
								"new":      "PER_USE",
								"old":      "",
							},
							"settings.0.replication_type": {
								"computed": false,
								"new":      "SYNCHRONOUS",
								"old":      "",
							},
							"settings.0.tier": {
								"computed": false,
								"new":      "db-f1-micro",
								"old":      "",
							},
							"settings.0.version": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
						},
						"requires_new": false,
					},
				},
			},
		},
	},
}

module_paths = [
	[],
]

terraform_version = "0.11.14"

variables = {}

module = func(path) {
	if types.type_of(path) is not "list" {
		error("expected list, got", types.type_of(path))
	}

	if length(path) < 1 {
		return _modules.root
	}

	addr = []
	for path as p {
		append(addr, "module")
		append(addr, p)
	}

	return _modules[strings.join(addr, ".")]
}

data = _modules.root.data
path = _modules.root.path
resources = _modules.root.resources